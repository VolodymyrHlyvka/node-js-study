name: Docker Image CI

on:
  push:
    branches: [node-perspective-api]
  pull_request:
    branches: [node-perspective-api]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        id: build-image
        run: |
          REPOSITORY_URI=${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG=latest

          echo "Building Docker image..."
          docker build -t $REPOSITORY_URI:$IMAGE_TAG .

          echo "Pushing Docker image to ECR..."
          docker push $REPOSITORY_URI:$IMAGE_TAG

      - name: Post Docker image details
        run: |
          echo "Image URI: ${{ steps.build-image.outputs.image }}"

      - name: Invoke SSM Document
        run: |
          aws ssm send-command --document-name "PullAndRunDockerImage" \
                               --targets "Key=instanceIds,Values=i-0658e2c649997b142" \
                               --comment "Deploy Docker image to EC2"
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
